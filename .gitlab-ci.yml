stages:
  - scan
  - aggregate-sarif

sast-scans:
  stage: scan
  image: maven:3.8.8-eclipse-temurin-11
  allow_failure: true
  script:
    - mvn clean install
    - mvn org.cyclonedx:cyclonedx-maven-plugin:2.7.9:makeAggregateBom

    # Install Grype and run scan
    - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
    - grype dir:. -o sarif > grype-results.sarif || true

    # Download and prepare SpotBugs CLI + FindSecBugs plugin
    - wget -O spotbugs.tgz https://github.com/spotbugs/spotbugs/releases/download/4.9.3/spotbugs-4.9.3.tgz
    - tar -xzf spotbugs.tgz
    - mv spotbugs-*/ spotbugs/
    - wget -O findsecbugs.jar https://search.maven.org/remotecontent?filepath=com/h3xstream/findsecbugs/findsecbugs-plugin/1.12.0/findsecbugs-plugin-1.12.0.jar
    - mv findsecbugs.jar spotbugs/plugin/.

    # Run SpotBugs CLI in SARIF format
    - |
      spotbugs/bin/spotbugs -sarif:/tmp/raw-spotbugs-output.txt -effort:max -low -auxclasspath lib:target/classes target/classes > /tmp/raw-spotbugs-output.txt
      grep -A100000 '{"version"' /tmp/raw-spotbugs-output.txt > ./spotbugs-results.sarif

    # Hadolint SARIF
    - curl -sSfL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
    - chmod +x /usr/local/bin/hadolint
    - hadolint --format sarif Dockerfile > hadolint-results.sarif || true


    # TruffleHog secret scan
    - touch .truffleignore
    - curl -sSfL https://github.com/trufflesecurity/trufflehog/releases/download/v3.89.2/trufflehog_3.89.2_linux_amd64.tar.gz -o trufflehog.tar.gz
    - tar -xzf trufflehog.tar.gz
    - mv trufflehog /usr/local/bin/
    - chmod +x /usr/local/bin/trufflehog
    - trufflehog git file://. --branch "$(git rev-parse --abbrev-ref HEAD)" --exclude-paths .truffleignore || true

  artifacts:
    paths:
      - target/bom.json
      - grype-results.sarif
      - spotbugs-results.sarif
      - hadolint-results.sarif
    name: sast-artifacts

semgrep-scan:
  stage: scan
  image: returntocorp/semgrep@sha256:8f85dbfb5d38592d0b916caac855cf18facba40674988caf763d52b9fe916694
  script:
    - semgrep scan --sarif --config auto . --output ./semgrep-results.sarif || true
  artifacts:
    paths:
      - ./semgrep-results.sarif
    name: semgrep-scan-results.sarif
    when: always
  allow_failure: true

collect-sarif-results:
  stage: aggregate-sarif
  image: python:3.11
  needs:
    - job: sast-scans
      artifacts: true
    - job: semgrep-scan
      artifacts: true
  script:
    - pip install sarif-tools jq

    # Prepare directory and move artifacts
    - mkdir -p sarif-input
    - cp ./*.sarif sarif-input/ || true
    - cp target/bom.json sarif-input/ || true
    - ls sarif-input

    # Create summary and HTML report
    - sarif summary sarif-input
    - sarif html -o summary.html sarif-input

    # Write SBOM summary to job log
    - echo "### ðŸ“¦ SBOM Summary"
    - |
      if [ -f sarif-input/bom.json ]; then
        jq -r '.components[] | "- \(.name) \(.version) â†’ \(.licenses[0].license.id // "Unknown")"' sarif-input/bom.json
      else
        echo "No SBOM found"
      fi

  artifacts:
    paths:
      - summary.html
    name: sarif-summary
    when: always
  allow_failure: true
